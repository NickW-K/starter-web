Dynamic mocks are great. I believe it was Martin Fowler who first switched me onto them. What we should be testing is how an object interacts with its surroundings. Often this means setting it running and verifying that it made the right outbound calls given an input. Sometimes, with more autonomous code, you need to simulate how the outside world will appear to it, and this can get complex.

Mockito is the tool of choice these days for a lot of Java developers as it has a fairly self explanatory syntax and is powerful enough for doing most of what you need. Note: Mockito is not a panacea. It can be more complex to try to pre-record in a dynamic mock what’s expected of it, than it might be to implement a simple-in-memory service that will act the way you want your simulation of a real service to act. Maybe that’s worth an article of its own another day.